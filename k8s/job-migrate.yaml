apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-db
spec:
  template:
    spec:
      containers:
        - name: migrate
          image: migrate/migrate
          args:
            - -path=/migrations
            - -database=postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?sslmode=disable
            - up
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: service_tickets
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: migrations
              mountPath: /migrations
      volumes:
        - name: migrations
          configMap:
            name: migrations-config
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: migrations-config
data:
  "000001_create_tickets_table.up.sql": |
    CREATE TABLE IF NOT EXISTS tickets (
        id VARCHAR(36) PRIMARY KEY,
        vertical_id VARCHAR(36) NOT NULL,
        user_id VARCHAR(36) NOT NULL,
        assign VARCHAR(36),
        skill_id VARCHAR(36),
        created_at TIMESTAMP NOT NULL,
        updated_at TIMESTAMP NOT NULL
    );

    -- Add indexes for frequently queried fields
    CREATE INDEX IF NOT EXISTS idx_tickets_vertical_id ON tickets(vertical_id);
    CREATE INDEX IF NOT EXISTS idx_tickets_user_id ON tickets(user_id);
    CREATE INDEX IF NOT EXISTS idx_tickets_assign ON tickets(assign);
    CREATE INDEX IF NOT EXISTS idx_tickets_created_at ON tickets(created_at);
  "000001_create_tickets_table.down.sql": |
    DROP TABLE IF EXISTS tickets; 